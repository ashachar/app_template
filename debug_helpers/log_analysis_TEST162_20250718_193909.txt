================================================================================
🔍 AUTOMATED LOG ANALYSIS REPORT
📌 Debug Session: TEST162
================================================================================
Generated: 2025-07-18 19:39:09

📊 SUMMARY
----------------------------------------
Files analyzed: 7
Total errors found: 10

🔴 ERROR BREAKDOWN
----------------------------------------
🔴 Database: 4 occurrences
🔴 API: 4 occurrences
🟡 Authentication: 2 occurrences

🚨 CRITICAL FINDINGS
----------------------------------------
1. [Database] in server_output.log
   [1]   message: 'relation "public.resume_generations" does not exist'

2. [Database] in server_output.log
   [1]   message: 'relation "public.resume_generations" does not exist'

3. [API] in debug-output.log
   [BROWSER ERROR]: TypeError: Failed to fetch

4. [API] in debug-output.log
   [BROWSER ERROR]: Failed to initialize lookup service: {message: TypeError: Failed to fetch, details: TypeError: Failed to fetch

5. [API] in debug-output.log
   [BROWSER ERROR]: [getUserJourneyState] Error getting user: AuthRetryableFetchError: Failed to fetch

6. [Database] in server_output.log
   [1]   message: 'relation "public.resume_generations" does not exist'

7. [Database] in server_output.log
   [1]   message: 'relation "public.resume_generations" does not exist'

8. [API] in test_debug_session.log
   2024-01-15 10:30:47 ERROR: 401 Unauthorized

9. [Authentication] in test_debug_session.log
   2024-01-15 10:30:47 [DEBUG-TEST162-API-ERROR] Authentication failed: Invalid password

10. [Authentication] in test_debug_session.log
   2024-01-15 10:30:49 [DEBUG-TEST162-UI-STATE] Updated auth state: {isAuthenticated: false, error: 'Invalid credentials'}

💡 SUGGESTED ACTIONS
----------------------------------------
1. Check RLS policies are correctly configured
2. Verify database connection in .env file
3. Check authentication tokens in Headers
4. Check if user has proper permissions
5. Check if route requires authentication
6. Verify API endpoint exists in api/routes/
7. Check if user is logged in before accessing protected routes
8. Check token expiration time
9. Verify JWT secret is configured correctly
10. Verify Supabase auth configuration
11. Database connection issues may be causing API failures
12. Check if migrations have been run: cd schema && ./run_migration.sh
13. Verify API server is running: check server_output.log
14. Verify database schema matches expectations in schema/sql/structured/
15. Ensure test user credentials are correct in .env
16. Check CORS configuration in api/server.js

📅 ERROR TIMELINE (last 5)
----------------------------------------
None - [Database] Line 74
None - [Database] Line 74
None - [API] Line 119
None - [API] Line 127
None - [API] Line 129

🔄 DEBUG FLOW ANALYSIS
----------------------------------------

API Module (3 entries):
  [FLOW] Received POST /api/auth/login...
  [VALIDATE] Validating credentials...
  [ERROR] Authentication failed: Invalid password...

UI Module (4 entries):
  [FLOW] Starting login form submission...
  [DATA] Form data: {email: 'test@example.com', password: '***'}...
  [ERROR] Received 401 response from API...
  [STATE] Updated auth state: {isAuthenticated: false, error: 'Invalid credentials'}...

🎯 RECOMMENDED NEXT STEPS
----------------------------------------
1. Focus on Database errors first (most frequent)
2. Address critical findings immediately
3. Run tests after implementing fixes
4. Re-run log analysis to verify fixes
================================================================================